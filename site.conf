-- site configuration for Gluon v2016.2
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'fferz-',

  -- Name of the community.
  site_name = 'Freifunk Erzgebirge',

  -- Shorthand of the community.
  site_code = 'fferz',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.13.80.0/20',
  prefix6 = '2a03:2260:200f::/48',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = { '2.de.pool.ntp.org' },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 11,
    ap = {
       -- ESSID used for client network.
	ssid = 'erzgebirge.freifunk.net',
    },
    ibss = {
	ssid = 'peer.erzgebirge.freifunk.net',  -- ESSID used for mesh
	bssid = '02:ff:c0:00:00:00', -- BSSID used for mesh
        mcast_rate = 6000,
    },    
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    channel = 36,
    ap = {
	ssid = 'erzgebirge.freifunk.net'
    },
    ibss = {
	ssid = 'peer.erzgebirge.freifunk.net',
	bssid = '02:ff:e0:00:00:00',
        mcast_rate = 6000
    }
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.13.80.1',
    ip6 = 'fdca:ffee:b0b0:1::1',
    -- anycast MAC of all nodes
    mac = '02:ff:c0:ff:e0:00',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+gmac'},
    enabled = true,
    -- configurable = true,
    
    bandwidth_limit = {
      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 1000,

      -- Default download limit (kbit/s).
      limit_ingress = 20000,
    },

    mtu = 1426,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          hugin = {
            key = '101fc0f07b54fe2da8b804c9bca703efda43c606bf9b36cc4a92a4eb9461e867',
            remotes = {'"erzgebirge.freifunk.net" port 10000'}
          },
        },
      },
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',
    -- Default to enabled for stable
    enabled = 1,

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://firmware.dev.fferz/stable/sysupgrade'
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                '20afcb259a653780a36d3bed506478b323f2f108809ea6aeb059cd145197004f', -- builder.dev.fferz
        },
      },
      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://firmware.dev.fferz/experimental/sysupgrade'
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                '20afcb259a653780a36d3bed506478b323f2f108809ea6aeb059cd145197004f', -- builder.dev.fferz
        },
      },
    },
  },
  mesh = {
    batman_adv = {
      gw_sel_class = 7,
    },
  },

  -- Authorized keys
  authorized_keys = { 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCtBZ2uUnUzOeJTuGB/EYBOxhX9o7q0Y3GlTgPHflE07CVNnf4ElPr3a1Y3J1oQm/tfDX1SAEPfSP38GYw6BcFcnn0/garIrHC8pUG2GINrgROwLvAE/fojICbAzq7k4P97ZKLOysig2WS1bKg3zRoOODgnPM8Sl3ymd+MA3XrPUDDimJxOiPL0hSZ3fDTvo5y2GNVZSLb7C3UZ8Ul2ONu/6nqv5sZnCHNJ5QbNeXjKsoPCH4wPwF6P2VW4i5mbKIldL82RkHP/9HbMtCCb0RSIAiOI47g0438MkHgEIvPpfqaKNoMqev4FQJNAOIoyD17zo8guyjU9ViouPAMPErAKo/t+4A/t6RVSegAe5rwWPgUauGkohIVcuXXwzY1YFCQYPw/Bq4ndxmQiu8k44CtW1ZacOEBp8XoUg/9bZyRJ2YDSaWTQnc9yddG22CyD+bCB9FNq2yoI1t+2trdqsCDBXxgQ3ab3XuEG+q39E0BXqlyg5TUTvQkpuC5A1pFyi8OqcxjRdqSIxpQOgXcUvP69d/SWa4pMRimJn3mXAksTTILxaHyKzS4pgkyS/0x6M5SQyiS0DFtZRbqvMm1aylNNLAL13jaarl1//94eR6Aj8IZTFiaPg5RnotazsbZNQ4olY8PktIoKh7SL+ILuKGA85Gn32rFUOI2Jio3JwdPetw== nemesis'},

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = false,
   },
}
